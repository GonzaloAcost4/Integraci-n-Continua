name: CI/CD + Deploy a Vercel

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  Test-and-Deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repo
      - uses: actions/checkout@v3

      # 2. Instala Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3. Instala dependencias
      - name: Install dependencies
        run: npm ci

      # 4. Corre tests con cobertura
      - name: Ejecutar tests con cobertura
        run: npx vitest 

      # 5. Analiza en SonarCloud


      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      # 6. Build de producción con Vite
      - name: Build de producción con Vite
        run: npm run build

      # 7. Instala CLI de Vercel
      - name: Instalar Vercel CLI
        run: npm install --global vercel

      # 8. Pull de configuración de Vercel
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # 9. Build del proyecto para Vercel
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # 10. Deploy del proyecto a Vercel
      - name: Deploy Project Artifacts
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
