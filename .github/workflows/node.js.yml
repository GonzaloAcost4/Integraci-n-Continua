name: CI + QA + Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-test:
    name: 🧪 Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Instalar dependencias
        run: npm ci

      - name: Build de producción con Vite
        run: npm run build

      - name: Ejecutar tests con Vitest
        run: npx vitest --coverage

      - name: Notificar a Slack (build + test)
        if: always()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: >
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "text": "🧪 *Build & Test finalizado*\n• Estado: *${{ job.status }}*\n• Autor: <${{ github.event.sender.html_url }}|${{ github.actor }}>\n• Commit: <${{ github.event.head_commit.url }}|${{ github.sha }}>"
            }

  sonarcloud:
    name: 🔍 Análisis SonarCloud
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Notificar a Slack (SonarCloud)
        if: always()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: >
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "text": "🔎 *SonarCloud finalizado*\n• Estado: *${{ job.status }}*\n• Autor: <${{ github.event.sender.html_url }}|${{ github.actor }}>\n• Commit: <${{ github.event.head_commit.url }}|${{ github.sha }}>"
            }

  deploy:
    name: 🚀 Deploy a Vercel
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - uses: actions/checkout@v3

      - name: Instalar dependencias
        run: npm ci

      - name: Instalar Vercel CLI
        run: npm install --global vercel

      - name: Pull Vercel environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build del proyecto para Vercel
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy del proyecto a producción
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Notificar a Slack (Deploy)
        if: always()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: >
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "text": "🚀 *Deploy completado en producción*\n• Estado: *${{ job.status }}*\n• Autor: <${{ github.event.sender.html_url }}|${{ github.actor }}>\n• Commit: <${{ github.event.head_commit.url }}|${{ github.sha }}>\n• 🔗 <https://integraci-n-continua-rlf8y9fz5-gonzaloacost4s-projects.vercel.app/|Ver sitio desplegado>"
            }
